// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int       @id @default(autoincrement())
  name                 String    @db.VarChar(50)
  email                String    @unique @db.VarChar(50)
  phone                String?   @unique @db.VarChar(15)
  hashedPassword       String
  hashedRefreshToken   String?
  is_active           Boolean   @default(true)
  activationLink       String?
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  orders               Order[]

  @@map("users")
}

model Order {
  id    Int @id @default(autoincrement())
  total Int

  User   User? @relation(fields: [userId], references: [id])
  userId Int?

  @@map("orders")
}

model Student {
  id              Int              @id @default(autoincrement())
  name            String
  student_courses StudentCourses[]

  @@map("students")
}

model Course {
  id              Int              @id @default(autoincrement())
  title           String
  student_courses StudentCourses[]

  @@map("courses")
}

model StudentCourses {
  id        Int     @id @default(autoincrement())
  studentId Int
  courseId  Int
  Student   Student @relation(fields: [studentId], references: [id])
  Course    Course  @relation(fields: [courseId], references: [id])

  @@unique([studentId, courseId])
  @@map("student_courses")
}
